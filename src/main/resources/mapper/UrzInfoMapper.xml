<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.keepingthepiggy.dao.UrzInfoMapper" >
  <resultMap id="BaseResultMap" type="cn.keepingthepiggy.dataModel.UrzInfo" >
    <result column="urzid" property="urzid" jdbcType="INTEGER" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="hobby" property="hobby" jdbcType="VARCHAR" />
    <result column="graduate" property="graduate" jdbcType="VARCHAR" />
    <result column="company" property="company" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="emotion" property="emotion" jdbcType="VARCHAR" />
    <result column="active" property="active" jdbcType="INTEGER" />
    <result column="signature" property="signature" jdbcType="VARCHAR" />
    <result column="badge" property="badge" jdbcType="VARCHAR" />
    <result column="portrayal_url" property="portrayalUrl" jdbcType="VARCHAR" />
    <result column="position" property="position" jdbcType="VARCHAR" />
    <result column="belong" property="belong" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.keepingthepiggy.dataModel.UrzInfo" extends="BaseResultMap" >
    <result column="portrayal_data" property="portrayalData" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    urzid, nickname, level, sex, hobby, graduate, company, age, birthday, phone, email, 
    address, emotion, active, signature, badge, portrayal_url, position, belong, create_time, 
    update_time
  </sql>
  <sql id="Blob_Column_List" >
    portrayal_data
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.keepingthepiggy.dataModel.UrzInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from urz_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.keepingthepiggy.dataModel.UrzInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from urz_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.keepingthepiggy.dataModel.UrzInfoExample" >
    delete from urz_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.keepingthepiggy.dataModel.UrzInfo" >
    insert into urz_info (urzid, nickname, level, 
      sex, hobby, graduate, 
      company, age, birthday, 
      phone, email, address, 
      emotion, active, signature, 
      badge, portrayal_url, position, 
      belong, create_time, update_time, 
      portrayal_data)
    values (#{urzid,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{sex,jdbcType=INTEGER}, #{hobby,jdbcType=VARCHAR}, #{graduate,jdbcType=VARCHAR}, 
      #{company,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{birthday,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{emotion,jdbcType=VARCHAR}, #{active,jdbcType=INTEGER}, #{signature,jdbcType=VARCHAR}, 
      #{badge,jdbcType=VARCHAR}, #{portrayalUrl,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, 
      #{belong,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{portrayalData,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="cn.keepingthepiggy.dataModel.UrzInfo" >
    insert into urz_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="urzid != null" >
        urzid,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="hobby != null" >
        hobby,
      </if>
      <if test="graduate != null" >
        graduate,
      </if>
      <if test="company != null" >
        company,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="emotion != null" >
        emotion,
      </if>
      <if test="active != null" >
        active,
      </if>
      <if test="signature != null" >
        signature,
      </if>
      <if test="badge != null" >
        badge,
      </if>
      <if test="portrayalUrl != null" >
        portrayal_url,
      </if>
      <if test="position != null" >
        position,
      </if>
      <if test="belong != null" >
        belong,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="portrayalData != null" >
        portrayal_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="urzid != null" >
        #{urzid,jdbcType=INTEGER},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="hobby != null" >
        #{hobby,jdbcType=VARCHAR},
      </if>
      <if test="graduate != null" >
        #{graduate,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="emotion != null" >
        #{emotion,jdbcType=VARCHAR},
      </if>
      <if test="active != null" >
        #{active,jdbcType=INTEGER},
      </if>
      <if test="signature != null" >
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="badge != null" >
        #{badge,jdbcType=VARCHAR},
      </if>
      <if test="portrayalUrl != null" >
        #{portrayalUrl,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="belong != null" >
        #{belong,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="portrayalData != null" >
        #{portrayalData,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.keepingthepiggy.dataModel.UrzInfoExample" resultType="java.lang.Integer" >
    select count(*) from urz_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update urz_info
    <set >
      <if test="record.urzid != null" >
        urzid = #{record.urzid,jdbcType=INTEGER},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.hobby != null" >
        hobby = #{record.hobby,jdbcType=VARCHAR},
      </if>
      <if test="record.graduate != null" >
        graduate = #{record.graduate,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null" >
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null" >
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.emotion != null" >
        emotion = #{record.emotion,jdbcType=VARCHAR},
      </if>
      <if test="record.active != null" >
        active = #{record.active,jdbcType=INTEGER},
      </if>
      <if test="record.signature != null" >
        signature = #{record.signature,jdbcType=VARCHAR},
      </if>
      <if test="record.badge != null" >
        badge = #{record.badge,jdbcType=VARCHAR},
      </if>
      <if test="record.portrayalUrl != null" >
        portrayal_url = #{record.portrayalUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null" >
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.belong != null" >
        belong = #{record.belong,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.portrayalData != null" >
        portrayal_data = #{record.portrayalData,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update urz_info
    set urzid = #{record.urzid,jdbcType=INTEGER},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      sex = #{record.sex,jdbcType=INTEGER},
      hobby = #{record.hobby,jdbcType=VARCHAR},
      graduate = #{record.graduate,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      emotion = #{record.emotion,jdbcType=VARCHAR},
      active = #{record.active,jdbcType=INTEGER},
      signature = #{record.signature,jdbcType=VARCHAR},
      badge = #{record.badge,jdbcType=VARCHAR},
      portrayal_url = #{record.portrayalUrl,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=VARCHAR},
      belong = #{record.belong,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      portrayal_data = #{record.portrayalData,jdbcType=LONGVARBINARY}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update urz_info
    set urzid = #{record.urzid,jdbcType=INTEGER},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      sex = #{record.sex,jdbcType=INTEGER},
      hobby = #{record.hobby,jdbcType=VARCHAR},
      graduate = #{record.graduate,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      emotion = #{record.emotion,jdbcType=VARCHAR},
      active = #{record.active,jdbcType=INTEGER},
      signature = #{record.signature,jdbcType=VARCHAR},
      badge = #{record.badge,jdbcType=VARCHAR},
      portrayal_url = #{record.portrayalUrl,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=VARCHAR},
      belong = #{record.belong,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>